{"ast":null,"code":"import _regeneratorRuntime from\"/home/ljnferreira/development/github-consulting/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/ljnferreira/development/github-consulting/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/ljnferreira/development/github-consulting/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/ljnferreira/development/github-consulting/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback,useEffect}from'react';import{FaGithub,FaPlus,FaSpinner,FaBars,FaTrash}from'react-icons/fa';import{Container,Form,SubmitButton,List,DeleteButton}from'./styles';import{Link}from'react-router-dom';import api from'../../services/api';export default function Main(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),newRepo=_useState2[0],setNewRepo=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),repositorios=_useState4[0],setRepositorios=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),alert=_useState8[0],setAlert=_useState8[1];// Buscar\nuseEffect(function(){var repoStorage=localStorage.getItem('repos');if(repoStorage){setRepositorios(JSON.parse(repoStorage));}},[]);// Salvar alterações\nuseEffect(function(){localStorage.setItem('repos',JSON.stringify(repositorios));},[repositorios]);var handleSubmit=useCallback(function(e){e.preventDefault();function submit(){return _submit.apply(this,arguments);}function _submit(){_submit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,hasRepo,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);setAlert(null);_context.prev=2;if(!(newRepo==='')){_context.next=5;break;}throw new Error('Você precisa indicar um repositorio!');case 5:_context.next=7;return api.get(\"repos/\".concat(newRepo));case 7:response=_context.sent;hasRepo=repositorios.find(function(repo){return repo.name===newRepo;});if(!hasRepo){_context.next=11;break;}throw new Error('Repositorio Duplicado');case 11:data={name:response.data.full_name};setRepositorios([].concat(_toConsumableArray(repositorios),[data]));setNewRepo('');_context.next=20;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](2);setAlert(true);console.log(_context.t0);case 20:_context.prev=20;setLoading(false);return _context.finish(20);case 23:case\"end\":return _context.stop();}}},_callee,null,[[2,16,20,23]]);}));return _submit.apply(this,arguments);}submit();},[newRepo,repositorios]);function handleinputChange(e){setNewRepo(e.target.value);setAlert(null);}var handleDelete=useCallback(function(repo){var find=repositorios.filter(function(r){return r.name!==repo;});setRepositorios(find);},[repositorios]);return React.createElement(Container,null,React.createElement(\"h1\",null,React.createElement(FaGithub,{size:25}),\"Meus Repositorios\"),React.createElement(Form,{onSubmit:handleSubmit,error:alert},React.createElement(\"input\",{type:\"text\",placeholder:\"Adicionar Repositorios\",value:newRepo,onChange:handleinputChange}),React.createElement(SubmitButton,{loading:loading?1:0},loading?React.createElement(FaSpinner,{color:\"#FFF\",size:14}):React.createElement(FaPlus,{color:\"#FFF\",size:14}))),React.createElement(List,null,repositorios.map(function(repo){return React.createElement(\"li\",{key:repo.name},React.createElement(\"span\",null,React.createElement(DeleteButton,{onClick:function onClick(){return handleDelete(repo.name);}},React.createElement(FaTrash,{size:14})),repo.name),React.createElement(Link,{to:\"/repositorio/\".concat(encodeURIComponent(repo.name))},React.createElement(FaBars,{size:20})));})));}","map":{"version":3,"sources":["/home/ljnferreira/development/github-consulting/src/pages/Main/index.js"],"names":["React","useState","useCallback","useEffect","FaGithub","FaPlus","FaSpinner","FaBars","FaTrash","Container","Form","SubmitButton","List","DeleteButton","Link","api","Main","newRepo","setNewRepo","repositorios","setRepositorios","loading","setLoading","alert","setAlert","repoStorage","localStorage","getItem","JSON","parse","setItem","stringify","handleSubmit","e","preventDefault","submit","Error","get","response","hasRepo","find","repo","name","data","full_name","console","log","handleinputChange","target","value","handleDelete","filter","r","map","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, {useState, useCallback, useEffect} from 'react';\r\nimport { FaGithub, FaPlus, FaSpinner, FaBars, FaTrash } from 'react-icons/fa';\r\nimport {Container, Form, SubmitButton, List, DeleteButton} from './styles';\r\nimport {Link} from 'react-router-dom';\r\nimport api from '../../services/api';\r\n\r\nexport default function Main(){\r\n\r\n  const [newRepo, setNewRepo] = useState('');\r\n  const [repositorios, setRepositorios] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  // Buscar\r\n  useEffect(()=>{\r\n    const repoStorage = localStorage.getItem('repos');\r\n\r\n    if(repoStorage){\r\n      setRepositorios(JSON.parse(repoStorage));\r\n    }\r\n\r\n  }, []);\r\n\r\n  \r\n  // Salvar alterações\r\n  useEffect(()=>{\r\n    localStorage.setItem('repos', JSON.stringify(repositorios));\r\n  }, [repositorios]);\r\n\r\n  const handleSubmit = useCallback((e)=>{\r\n    e.preventDefault();\r\n\r\n    async function submit(){\r\n      setLoading(true);\r\n      setAlert(null);\r\n      try{\r\n\r\n        if(newRepo === ''){\r\n          throw new Error('Você precisa indicar um repositorio!');\r\n        }\r\n\r\n        const response = await api.get(`repos/${newRepo}`);\r\n\r\n        const hasRepo = repositorios.find(repo => repo.name === newRepo);\r\n\r\n        if(hasRepo){\r\n          throw new Error('Repositorio Duplicado');\r\n        }\r\n  \r\n        const data = {\r\n          name: response.data.full_name,\r\n        }\r\n    \r\n        setRepositorios([...repositorios, data]);\r\n        setNewRepo('');\r\n      }catch(error){\r\n        setAlert(true);\r\n        console.log(error);\r\n      }finally{\r\n        setLoading(false);\r\n      }\r\n\r\n    }\r\n\r\n    submit();\r\n\r\n  }, [newRepo, repositorios]);\r\n\r\n  function handleinputChange(e){\r\n    setNewRepo(e.target.value);\r\n    setAlert(null);\r\n  }\r\n\r\n  const handleDelete = useCallback((repo)=> {\r\n    const find = repositorios.filter(r => r.name !== repo);\r\n    setRepositorios(find);\r\n  }, [repositorios]);\r\n\r\n\r\n  return(\r\n    <Container>\r\n      \r\n      <h1>\r\n        <FaGithub size={25}/>\r\n        Meus Repositorios\r\n      </h1>\r\n\r\n      <Form onSubmit={handleSubmit} error={alert}>\r\n        <input \r\n        type=\"text\" \r\n        placeholder=\"Adicionar Repositorios\"\r\n        value={newRepo}\r\n        onChange={handleinputChange}\r\n        />\r\n\r\n        <SubmitButton loading={loading ? 1 : 0}>\r\n          {loading ? (\r\n            <FaSpinner color=\"#FFF\" size={14}/>\r\n          ) : (\r\n            <FaPlus color=\"#FFF\" size={14}/>\r\n          )}\r\n        </SubmitButton>\r\n\r\n      </Form>\r\n\r\n      <List>\r\n         {repositorios.map(repo => (\r\n           <li key={repo.name}>\r\n             <span>\r\n             <DeleteButton onClick={()=> handleDelete(repo.name) }>\r\n                <FaTrash size={14}/>\r\n             </DeleteButton>  \r\n             {repo.name}\r\n             </span>\r\n             <Link to={`/repositorio/${encodeURIComponent(repo.name)}`}>\r\n               <FaBars size={20}/>\r\n             </Link>\r\n           </li>\r\n         ))} \r\n      </List>\r\n\r\n    </Container>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["pages/Main/styles.js","services/api.js","pages/Main/index.js","pages/Repositorio/styles.js","pages/Repositorio/index.js","routes.js","styles/global.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Form","form","props","error","animate","keyframes","SubmitButton","button","attrs","type","disabled","loading","css","List","ul","DeleteButton","api","axios","create","baseURL","Main","useState","newRepo","setNewRepo","repositorios","setRepositorios","setLoading","alert","setAlert","useEffect","repoStorage","localStorage","getItem","JSON","parse","setItem","stringify","handleSubmit","useCallback","e","a","Error","get","response","find","repo","name","data","full_name","console","log","preventDefault","submit","handleDelete","filter","r","size","onSubmit","placeholder","value","onChange","target","color","map","key","onClick","to","encodeURIComponent","Loading","Owner","header","BackButton","Link","IssuesList","PageActions","FilterList","active","Repositorio","match","repositorio","setRepositorio","issues","setIssues","page","setPage","state","label","filters","filterIndex","setFilterIndex","handlePage","action","nomeRepo","decodeURIComponent","params","Promise","all","f","per_page","repositorioData","issuesData","load","loadIssue","src","owner","avatar_url","alt","login","description","index","handleFilter","issue","String","id","user","href","html_url","title","labels","Routes","exact","path","component","createGlobalStyle","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e88e72e.chunk.js","sourcesContent":["import styled, {keyframes, css} from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 700px;\r\n  background: #FFF;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 20px rgba(0,0,0, 0.2);\r\n  padding: 30px;\r\n  margin: 80px auto;\r\n\r\n  h1{\r\n    font-size: 20px;\r\n    display:flex;\r\n    align-items: center;\r\n    flex-direction:row;\r\n    \r\n    svg{\r\n      margin-right: 10px;\r\n    }\r\n\r\n  }\r\n\r\n\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  margin-top: 30px;\r\n  display:flex;\r\n  flex-direction: row;\r\n\r\n  input{\r\n    flex:1;\r\n    border: 1px solid ${props => (props.error ? '#FF0000' : '#eee')};\r\n    padding: 10px 15px;\r\n    border-radius: 4px;\r\n    font-size: 17px;\r\n  }\r\n\r\n`;\r\n\r\n//Criando animcação do botao\r\nconst animate = keyframes`\r\n  from{\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to{\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled.button.attrs(props => ({\r\n  type: 'submit',\r\n  disabled: props.loading,\r\n}))`\r\n  background:#0D2636;\r\n  border: 0;\r\n  border-radius: 4px;\r\n  margin-left: 10px;\r\n  padding: 0 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n\r\n  &[disabled]{\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n\r\n\r\n  ${props => props.loading &&\r\n    css`\r\n      svg{\r\n        animation: ${animate} 2s linear infinite;\r\n      }\r\n    `\r\n  }\r\n\r\n\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style:none;\r\n  margin-top: 20px;\r\n\r\n  li{\r\n    padding: 15px 0;\r\n    display: flex;\r\n    flex-direction:row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    & + li{\r\n      border-top: 1px solid #eee;\r\n    }\r\n\r\n    a{\r\n      color:#0D2636;\r\n      text-decoration: none;\r\n    }\r\n\r\n\r\n  }\r\n\r\n`;\r\n\r\n\r\nexport const DeleteButton = styled.button.attrs({\r\n  type:'button'\r\n})`\r\n  background: transparent;\r\n  color:#0D2636;\r\n  border:0;\r\n  padding: 8px 7px;\r\n  outline:0;\r\n  border-radius: 4px;\r\n`;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.github.com',\r\n});\r\n\r\nexport default api;","import React, {useState, useCallback, useEffect} from 'react';\r\nimport { FaGithub, FaPlus, FaSpinner, FaBars, FaTrash } from 'react-icons/fa';\r\nimport {Container, Form, SubmitButton, List, DeleteButton} from './styles';\r\nimport {Link} from 'react-router-dom';\r\nimport api from '../../services/api';\r\n\r\nexport default function Main(){\r\n\r\n  const [newRepo, setNewRepo] = useState('');\r\n  const [repositorios, setRepositorios] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  // Buscar\r\n  useEffect(()=>{\r\n    const repoStorage = localStorage.getItem('repos');\r\n\r\n    if(repoStorage){\r\n      setRepositorios(JSON.parse(repoStorage));\r\n    }\r\n\r\n  }, []);\r\n\r\n  \r\n  // Salvar alterações\r\n  useEffect(()=>{\r\n    localStorage.setItem('repos', JSON.stringify(repositorios));\r\n  }, [repositorios]);\r\n\r\n  const handleSubmit = useCallback((e)=>{\r\n    e.preventDefault();\r\n\r\n    async function submit(){\r\n      setLoading(true);\r\n      setAlert(null);\r\n      try{\r\n\r\n        if(newRepo === ''){\r\n          throw new Error('Você precisa indicar um repositorio!');\r\n        }\r\n\r\n        const response = await api.get(`repos/${newRepo}`);\r\n\r\n        const hasRepo = repositorios.find(repo => repo.name === newRepo);\r\n\r\n        if(hasRepo){\r\n          throw new Error('Repositorio Duplicado');\r\n        }\r\n  \r\n        const data = {\r\n          name: response.data.full_name,\r\n        }\r\n    \r\n        setRepositorios([...repositorios, data]);\r\n        setNewRepo('');\r\n      }catch(error){\r\n        setAlert(true);\r\n        console.log(error);\r\n      }finally{\r\n        setLoading(false);\r\n      }\r\n\r\n    }\r\n\r\n    submit();\r\n\r\n  }, [newRepo, repositorios]);\r\n\r\n  function handleinputChange(e){\r\n    setNewRepo(e.target.value);\r\n    setAlert(null);\r\n  }\r\n\r\n  const handleDelete = useCallback((repo)=> {\r\n    const find = repositorios.filter(r => r.name !== repo);\r\n    setRepositorios(find);\r\n  }, [repositorios]);\r\n\r\n\r\n  return(\r\n    <Container>\r\n      \r\n      <h1>\r\n        <FaGithub size={25}/>\r\n        Meus Repositorios\r\n      </h1>\r\n\r\n      <Form onSubmit={handleSubmit} error={alert}>\r\n        <input \r\n        type=\"text\" \r\n        placeholder=\"Adicionar Repositorios\"\r\n        value={newRepo}\r\n        onChange={handleinputChange}\r\n        />\r\n\r\n        <SubmitButton loading={loading ? 1 : 0}>\r\n          {loading ? (\r\n            <FaSpinner color=\"#FFF\" size={14}/>\r\n          ) : (\r\n            <FaPlus color=\"#FFF\" size={14}/>\r\n          )}\r\n        </SubmitButton>\r\n\r\n      </Form>\r\n\r\n      <List>\r\n         {repositorios.map(repo => (\r\n           <li key={repo.name}>\r\n             <span>\r\n             <DeleteButton onClick={()=> handleDelete(repo.name) }>\r\n                <FaTrash size={14}/>\r\n             </DeleteButton>  \r\n             {repo.name}\r\n             </span>\r\n             <Link to={`/repositorio/${encodeURIComponent(repo.name)}`}>\r\n               <FaBars size={20}/>\r\n             </Link>\r\n           </li>\r\n         ))} \r\n      </List>\r\n\r\n    </Container>\r\n  )\r\n}","import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Loading = styled.div`\r\n  color: #FFF;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  max-width: 700px;\r\n  background: #FFF;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\r\n  padding: 30px;\r\n  margin: 80px auto;\r\n\r\n\r\n`;\r\n\r\nexport const Owner = styled.header`\r\n  display: flex;\r\n  flex-direction:column;\r\n  align-items: center;\r\n\r\n  img{\r\n    width: 150px;\r\n    border-radius: 20%;\r\n    margin: 20px 0;\r\n  }\r\n\r\n  h1{\r\n    font-size: 30px;\r\n    color:#0D2636;\r\n  }\r\n\r\n  p{\r\n    margin-top: 5px;\r\n    font-size: 14px;\r\n    color:#000;\r\n    text-align: center;\r\n    line-height: 1.4;\r\n    max-width: 400px;\r\n\r\n  }  \r\n\r\n\r\n`;\r\n\r\nexport const BackButton = styled(Link)`\r\n  border:0;\r\n  outline:0;\r\n  background: transparent;\r\n`;\r\n\r\nexport const IssuesList = styled.ul`\r\n  margin-top: 30px;\r\n  padding-top: 30px;\r\n  border-top: 1px solid #eee;\r\n  list-style:none;\r\n\r\n  li{\r\n    display:flex;\r\n    padding: 15px 10px;\r\n\r\n    & + li{\r\n      margin-top: 12px;\r\n    }\r\n\r\n    img{\r\n      width:36px;\r\n      height:36px;\r\n      border-radius: 50%;\r\n      border: 2px solid #0D2636;\r\n    }\r\n\r\n    div{\r\n      flex:1;\r\n      margin-left: 12px;\r\n\r\n\r\n      p{\r\n        margin-top: 10px;\r\n        font-size: 12px;\r\n        color: #000;\r\n      }\r\n\r\n    }\r\n\r\n    strong{\r\n      font-size: 15px;\r\n\r\n      a{\r\n        text-decoration:none;\r\n        color: #222;\r\n        transform: 0.3s;\r\n\r\n        &:hover{\r\n          color: #0071db;\r\n        }\r\n\r\n      }\r\n\r\n      span{\r\n        background: #222;\r\n        color: #FFF;\r\n        border-radius: 4px;\r\n        font-size: 12px;\r\n        font-weight: 600;\r\n        padding: 5px 7px;\r\n        margin-left: 10px;\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n`;\r\n\r\nexport const PageActions = styled.div`\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content: space-between;\r\n\r\n  button{\r\n    outline:0;\r\n    border:0;\r\n    background: #222;\r\n    color: #FFF;\r\n    padding: 5px 10px;\r\n    border-radius: 4px;\r\n\r\n    &:disabled{\r\n      cursor: not-allowed;\r\n      opacity: 0.5;\r\n    }\r\n\r\n  }\r\n\r\n`;\r\n\r\nexport const FilterList = styled.div`\r\n  margin: 15px 0;\r\n\r\n  button{\r\n    outline:0;\r\n    border:0;\r\n    padding: 8px;\r\n    border-radius: 4px;\r\n    margin: 0 3px;\r\n\r\n    &:nth-child(${props => props.active + 1}){\r\n      background: #0071db;\r\n      color:#FFF;\r\n    }\r\n\r\n\r\n  }\r\n\r\n`;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Container, Owner, Loading, BackButton, IssuesList, PageActions, FilterList} from './styles';\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport api from '../../services/api';\r\n\r\nexport default function Repositorio({match}){\r\n\r\n  const [repositorio, setRepositorio] = useState({});\r\n  const [issues, setIssues] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [filters, setFilters] = useState([\r\n    {state: 'all', label: 'Todas', active: true},\r\n    {state: 'open', label: 'Abertas', active: false},\r\n    {state: 'closed', label: 'Fechadas', active: false},\r\n  ]);\r\n  const [filterIndex, setFilterIndex] = useState(0);\r\n\r\n  useEffect(()=> {\r\n    \r\n    async function load(){\r\n      const nomeRepo = decodeURIComponent(match.params.repositorio);\r\n\r\n      const [repositorioData, issuesData] = await Promise.all([\r\n        api.get(`/repos/${nomeRepo}`),\r\n        api.get(`/repos/${nomeRepo}/issues`, {\r\n          params:{\r\n            state: filters.find(f => f.active).state, \r\n            per_page: 5\r\n          }\r\n        })\r\n      ]);\r\n\r\n      setRepositorio(repositorioData.data);\r\n      setIssues(issuesData.data);\r\n      console.log(issuesData.data);\r\n\r\n      setLoading(false);\r\n\r\n    }\r\n\r\n    load();\r\n\r\n  }, [filters, match.params.repositorio]);\r\n\r\n\r\n  useEffect(()=> {\r\n\r\n    async function loadIssue(){\r\n      const nomeRepo = decodeURIComponent(match.params.repositorio);\r\n\r\n      const response = await api.get(`/repos/${nomeRepo}/issues`, {\r\n        params:{\r\n          state: filters[filterIndex].state,\r\n          page,\r\n          per_page: 5,\r\n        },\r\n      });\r\n\r\n      setIssues(response.data);\r\n    }\r\n\r\n    loadIssue();\r\n\r\n  }, [filterIndex, filters, match.params.repositorio, page]);\r\n  \r\n  function handlePage(action){\r\n    setPage(action === 'back' ? page - 1 : page + 1 )\r\n  }\r\n\r\n  function handleFilter(index){\r\n    setFilterIndex(index);\r\n  }\r\n\r\n\r\n  if(loading){\r\n    return(\r\n      <Loading>\r\n        <h1>Carregando...</h1>\r\n      </Loading>\r\n    )\r\n  }\r\n  \r\n  return(\r\n    <Container>\r\n        <BackButton to=\"/\">\r\n          <FaArrowLeft color=\"#000\" size={30} />\r\n        </BackButton>\r\n\r\n        <Owner>\r\n          <img \r\n          src={repositorio.owner.avatar_url} \r\n          alt={repositorio.owner.login} \r\n          />\r\n          <h1>{repositorio.name}</h1>\r\n          <p>{repositorio.description}</p>\r\n        </Owner>\r\n\r\n        <FilterList active={filterIndex}>\r\n          {filters.map((filter, index) => (\r\n            <button\r\n             type=\"button\"\r\n             key={filter.label}\r\n             onClick={()=> handleFilter(index)}\r\n            >\r\n              {filter.label}\r\n            </button>\r\n          ) )}\r\n        </FilterList>\r\n\r\n        <IssuesList>\r\n          {issues.map(issue => (\r\n            <li key={String(issue.id)}>\r\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\r\n\r\n              <div>\r\n                <strong>\r\n                  <a href={issue.html_url}>{issue.title}</a>\r\n\r\n                  {issue.labels.map(label => (\r\n                    <span key={String(label.id)}>{label.name}</span>\r\n                  ))}\r\n\r\n                </strong>\r\n\r\n                <p>{issue.user.login}</p>\r\n\r\n              </div>\r\n\r\n            </li>\r\n          ))}\r\n        </IssuesList>\r\n\r\n        <PageActions>\r\n          <button \r\n          type=\"button\" \r\n          onClick={()=> handlePage('back') }\r\n          disabled={page < 2}\r\n          >\r\n            Voltar\r\n          </button>\r\n\r\n          <button type=\"button\" onClick={()=> handlePage('next') }>\r\n            Proxima\r\n          </button>\r\n        </PageActions>\r\n\r\n    </Container>\r\n  )\r\n}","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\n\r\nimport Main from './pages/Main';\r\nimport Repositorio from './pages/Repositorio';\r\n\r\nexport default function Routes(){\r\n  return(\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Route exact path=\"/repositorio/:repositorio\" component={Repositorio} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}","import {createGlobalStyle} from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n *{\r\n   margin: 0;\r\n   padding: 0;\r\n   outline:0;\r\n   box-sizing: border-box;\r\n }\r\n\r\n html, body, #root{\r\n   min-height: 100%;\r\n }\r\n\r\n body{\r\n   background: #0D2636;\r\n   font-size: 14px;\r\n   -webkit-font-smoothing: antialiased !important;\r\n }\r\n\r\n body, input, button{\r\n   color: #222;\r\n   font-size: 14px;\r\n   font-family: Arial, Helvetica, sans-serif;\r\n }\r\n\r\n button{\r\n   cursor: pointer;\r\n }\r\n\r\n`;","import React from 'react';\n\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n  return (\n    <>\n    <GlobalStyle/>\n    <Routes/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}